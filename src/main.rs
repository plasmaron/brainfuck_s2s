use std::io;
mod macros;
fn main() -> std::io::Result<()> {
    demos::hello_world()?;
    demos::ascii_numbers()?;
    Ok(())
}

mod demos {
    use crate::macros;
    pub fn hello_world() -> std::io::Result<()> {
        // Prints "Hello World!"
        macros::brainfuck!(++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.);
        Ok(())
    }

    pub fn ascii_numbers() -> std::io::Result<()> {
        macros::brainfuck!(>>>>+>+++>+++>>>>>+++[
        >,+>++++[>++++<-]>[<<[-[->]]>[<]>-]<<[
        >+>+>>+>+[<<<<]<+>>[+<]<[>]>+[[>>>]>>+[<<<<]>-]+<+>>>-[
        <<+[>]>>+<<<+<+<--------[
        <<-<<+[>]>+<<-<<-[
          <<<+<-[>>]<-<-<<<-<----[
            <<<->>>>+<-[
              <<<+[>]>+<<+<-<-[
                <<+<-<+[>>]<+<<<<+<-[
                  <<-[>]>>-<<<-<-<-[
                    <<<+<-[>>]<+<<<+<+<-[
                      <<<<+[>]<-<<-[
                        <<+[>]>>-<<<<-<-[
                          >>>>>+<-<<<+<-[
                            >>+<<-[
                              <<-<-[>]>+<<-<-<-[
                                <<+<+[>]<+<+<-[
                                  >>-<-<-[
                                    <<-[>]<+<++++[<-------->-]++<[
                                      <<+[>]>>-<-<<<<-[
                                        <<-<<->>>>-[
                                          <<<<+[>]>+<<<<-[
                                            <<+<<-[>>]<+<<<<<-[
                                              >>>>-<<<-<-
        ]]]]]]]]]]]]]]]]]]]]]]>[>[[[<<<<]>+>>[>>>>>]<-]<]>>>+>>>>>>>+>]<
        ]<[-]<<<<<<<++<+++<+++[
        [>]>>>>>>++++++++[<<++++>++++++>-]<-<<[-[<+>>.<-]]<<<<[
        -[-[>+<-]>]>>>>>[.[>]]<<[<+>-]>>>[<<++[<+>--]>>-]
        <<[->+<[<++>-]]<<<[<+>-]<<<<
        ]>>+>>>--[<+>---]<.>>[[-]<<]<
        ]);
        Ok(())
    }

    pub fn panics() -> std::io::Result<()> {
        // Brings the data pointer below 0
        macros::brainfuck!(><<);
        Ok(())
    }
}

